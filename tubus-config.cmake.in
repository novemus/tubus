include(CMakeFindDependencyMacro)

find_dependency(Boost)

set(CMAKE_THREAD_PREFER_PTHREAD TRUE)
find_dependency(Threads)
unset(CMAKE_THREAD_PREFER_PTHREAD)

get_filename_component(tubus_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" DIRECTORY)
get_filename_component(tubus_CMAKE_DIR "${tubus_CMAKE_DIR}" DIRECTORY)
set(tubus_INCLUDE_DIR "${tubus_CMAKE_DIR}/include")
set(tubus_LIBRARY_DIR "${tubus_CMAKE_DIR}/lib")

if (tubus_USE_SHARED_LIB)
    add_library(tubus SHARED IMPORTED)
else()
    add_library(tubus STATIC IMPORTED)
endif()

if(CMAKE_BUILD_TYPE MATCHES "Debug")
    set(_bt_postfix "d")
else()
    set(_bt_postfix "")
endif()

if(WIN32 AND tubus_USE_SHARED_LIB)
    find_file(tubus_DLL tubus${_bt_postfix}.dll PATHS "${tubus_LIBRARY_DIR}" NO_DEFAULT_PATH)
    find_file(tubus_LIB tubus${_bt_postfix}.lib PATHS "${tubus_LIBRARY_DIR}" NO_DEFAULT_PATH)

    if(NOT tubus_DLL)
        message(FATAL_ERROR "tubus shared library ${tubus_DLL} not found")
    endif()

    if(NOT tubus_LIB)
        message(FATAL_ERROR "tubus import library ${tubus_LIB} not found")
    endif()

    set_target_properties(tubus PROPERTIES
        INTERFACE_INCLUDE_DIRECTORIES ${tubus_INCLUDE_DIR}
        IMPORTED_IMPLIB "${tubus_LIB}"
        IMPORTED_LOCATION "${tubus_DLL}")
else()
    if (WIN32)
        find_file(tubus_LIB tubus${_bt_postfix}-static.lib PATHS "${tubus_LIBRARY_DIR}" NO_DEFAULT_PATH)
    elseif(tubus_USE_SHARED_LIB)
        find_file(tubus_LIB libtubus${_bt_postfix}.so PATHS "${tubus_LIBRARY_DIR}" NO_DEFAULT_PATH)
    else()
        find_file(tubus_LIB libtubus${_bt_postfix}.a PATHS "${tubus_LIBRARY_DIR}" NO_DEFAULT_PATH)
    endif()

    if(NOT tubus_LIB)
        message(FATAL_ERROR "tubus library ${tubus_LIB} not found")
    endif()

    set_target_properties(tubus PROPERTIES
        INTERFACE_INCLUDE_DIRECTORIES ${tubus_INCLUDE_DIR}
        IMPORTED_LOCATION "${tubus_LIB}")
endif()

unset(_bt_postfix)

set(tubus_FOUND TRUE)
